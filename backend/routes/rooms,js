const express = require("express");
const router = express.Router();
const Room = require("../models/Room");
const User = require("../models/User");
const jwt = require("jsonwebtoken");

// دالة للتحقق من التوكن وحماية المسارات
function authenticateToken(req, res, next) {
  const authHeader = req.headers["authorization"];
  const token = authHeader && authHeader.split(" ")[1];
  if (!token) return res.sendStatus(401);

  jwt.verify(token, process.env.JWT_SECRET || "secretkey", (err, user) => {
    if (err) return res.sendStatus(403);
    req.user = user;
    next();
  });
}

// إنشاء غرفة جديدة
router.post("/create", authenticateToken, async (req, res) => {
  const { name, isPrivate, code, members } = req.body;

  if (!name) {
    return res.status(400).json({ message: "اسم الغرفة مطلوب" });
  }

  try {
    const room = new Room({
      name,
      owner: req.user.id,
      isPrivate: !!isPrivate,
      code: isPrivate ? code : null,
      members: members || [],
    });

    // أضف صاحب الغرفة ضمن الأعضاء
    if (!room.members.includes(req.user.id)) {
      room.members.push(req.user.id);
    }

    await room.save();

    res.status(201).json(room);
  } catch (err) {
    console.error(err);
    res.status(500).json({ message: "خطأ في السيرفر" });
  }
});

// جلب كل الغرف التي يكون المستخدم عضوًا بها
router.get("/", authenticateToken, async (req, res) => {
  try {
    const rooms = await Room.find({ members: req.user.id });
    res.json(rooms);
  } catch (err) {
    console.error(err);
    res.status(500).json({ message: "خطأ في السيرفر" });
  }
});

// الانضمام لغرفة خاصة عبر الكود
router.post("/join", authenticateToken, async (req, res) => {
  const { roomId, code } = req.body;

  try {
    const room = await Room.findById(roomId);
    if (!room) return res.status(404).json({ message: "الغرفة غير موجودة" });

    if (room.isPrivate) {
      if (room.code !== code) {
        return res.status(403).json({ message: "كود الدخول خاطئ" });
      }
    }

    // أضف المستخدم إذا لم يكن عضوًا مسبقاً
    if (!room.members.includes(req.user.id)) {
      room.members.push(req.user.id);
      await room.save();
    }

    res.json(room);
  } catch (err) {
    console.error(err);
    res.status(500).json({ message: "خطأ في السيرفر" });
  }
});

module.exports = router;
